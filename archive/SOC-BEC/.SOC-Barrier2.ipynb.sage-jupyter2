{"type":"settings","kernel":"python2-ubuntu","backend_state":"running","trust":true,"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":2},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython2","version":"2.7.10"}},"kernel_state":"idle"}
{"output":{"0":{"data":{"text/plain":"0.27826346648124606"},"exec_count":7},"1":{"data":{"image/png":"29c6fc1a12044474c8e2d4915a22cacbf9872c00"}}},"exec_count":7,"start":1495498755717,"input":"s = State2(Nxyz=(64,), Lxyz=(23*u.micron,))\ns.plot()\nplt.plot(x, s.get_Vext())\ndy = s.empty()\ns.compute_dy_dt(dy=dy, subtract_mu=False)\nabs(dy[...]).max()","scrolled":true,"state":"done","pos":6,"cell_type":"code","type":"cell","end":1495498756052,"id":"a2d1dc","kernel":"python2-ubuntu"}
{"output":{"0":{"text":"(6.010003337302212, 6.010003337302213)\n9.87009441159e-15\n","name":"stdout"}},"exec_count":4,"start":1495498754640,"input":"s = State2(Nxyz=(46,), Lxyz=(23*u.micron,))\na = np.sqrt(u.hbar/u.m/s.ws[0])\nL, N = s.Lxyz[0], s.Nxyz[0]\nk_max = np.pi*(N-2)/L   # For Khalid...\nprint (k_max, s.kxyz[0].max())\nprint(np.exp(-(L/2/a)**2/2))   # Wavefunction drops by factor of macheps","state":"done","pos":3,"cell_type":"code","type":"cell","end":1495498754648,"id":"3b9ddf","kernel":"python2-ubuntu"}
{"output":{"0":{"text":"Populating the interactive namespace from numpy and matplotlib\n","name":"stdout"},"1":{"data":{"image/png":"736391551c392d8a0f96918b9bddd9c18a9c1efd"}}},"exec_count":2,"start":1495498753018,"input":"%pylab inline --no-import-all\nfrom IPython.display import display, clear_output\ns = State2(Nxyz=(128,), Lxyz=(40*u.micron,),ws = np.array([26.0, ])*u.Hz, N=1e5)\ns.plot()","scrolled":true,"state":"done","pos":1,"cell_type":"code","type":"cell","end":1495498753437,"id":"ae6d77","kernel":"python2-ubuntu"}
{"output":{"0":{"data":{"image/png":"d5b003c2c69b6deb978e64125bb5736b39a6fdd4"}}},"exec_count":10,"start":1495498756639,"input":"e.y.t=0\ne.y.cooling_phase = 1j\ne.y.barrierFlag = False\ne.y.g22 = 0.55 * 4 * np.pi * u.hbar**2 * u.a/u.m\nwith NoInterrupt(ignore=True) as interrupted:\n    while e.y.t < 1*u.ms and not interrupted:\n        e.evolve(100)\n        plt.clf()\n        e.y.plot()\n        display(plt.gcf())\n        clear_output(wait=True)","scrolled":true,"state":"done","pos":9,"cell_type":"code","type":"cell","end":1495498779044,"id":"03420f","kernel":"python2-ubuntu"}
{"output":{"0":{"data":{"text/plain":"[<matplotlib.lines.Line2D at 0x7fde8da2bb50>]"},"exec_count":5},"1":{"data":{"image/png":"7fa2ac3e5daaf274c6c17ee08aea41868ab6ab1d"}}},"exec_count":5,"start":1495498754655,"input":"psi_0 = s.xyz[0]*np.exp(-(s.xyz[0]/a)**2/2)\nplt.semilogy(np.fft.fftshift(s.kxyz[0]), \n         np.fft.fftshift(abs(np.fft.fft(psi_0))), '-+')","scrolled":true,"state":"done","pos":4,"cell_type":"code","type":"cell","end":1495498755690,"id":"76a7d1","kernel":"python2-ubuntu"}
{"output":{"0":{"text":"Populating the interactive namespace from numpy and matplotlib\n","name":"stdout"}},"exec_count":6,"start":1495498755711,"input":"%pylab inline --no-import-all\nfrom IPython.display import display, clear_output\nimport States\nfrom States import State, u\ns = State(Nxyz=(64,), Lxyz=(23*u.micron,), N=1e5)\na = np.sqrt(u.hbar/u.m/s.ws[0])\nx = s.xyz[0]\npsi_0 = np.exp(-(x/a)**2/2)\n#print(x)\n#print(psi_0)\nclass State1(State2):\n    def __init__(self, *v, **kw):\n        State.__init__(self, *v, **kw)\n        a = np.sqrt(u.hbar/u.m/self.ws[0])\n        x = self.xyz[0]\n        k = 1./2./a**2\n        psi_0 = 4.0*np.exp(-(x/a)**2/2)\n        n_0 = abs(psi_0)**2\n        self._V_ext = (u.hbar**2/2.0/u.m*(4*(k*x)**2 - 2*k) - self.g*n_0)\n        self.data[...] = psi_0\n        self.get_Vext = lambda: self._V_ext\n        self.pre_evolve_hook()\n\n","state":"done","pos":5,"cell_type":"code","type":"cell","end":1495498755716,"id":"5088df","kernel":"python2-ubuntu"}
{"output":{"0":{"data":{"image/png":"32cfc862ab3aa6d7fad6c26e4e848e585afd1a04"}}},"exec_count":9,"start":1495498756075,"input":"from mmfutils.contexts import NoInterrupt\nfrom pytimeode.evolvers import EvolverSplit, EvolverABM\nfrom IPython.display import display, clear_output\n\ns = State2(Nxyz=(64*4,), Lxyz=(23*u.micron,))\nassert np.allclose(s._N, s.get_N())\ns[0] = 1.0\ns[1] = 1.0\ns.normalize()\ns.cooling_phase = 1j\nE_max = u.hbar**2*np.abs(s.kxyz).max()**2/2.0/u.m\ne = EvolverABM(s, dt=0.1*u.hbar/E_max, normalize=True)\ne.y.plot()\n","state":"done","pos":8,"cell_type":"code","type":"cell","end":1495498756631,"id":"73e6d4","kernel":"python2-ubuntu"}
{"exec_count":8,"start":1495498756060,"input":"#print(s.kxyz)\nK1=sum((u.hbar*_k)**2/2.0/u.m for _k in s.kxyz)\n#print(K1)\nK=(u.hbar*s.kxyz[0])**2/u.m\n#print(K)","state":"done","pos":7,"cell_type":"code","type":"cell","end":1495498756064,"id":"82c62f","kernel":"python2-ubuntu"}
{"output":{"0":{"data":{"text/plain":"[<matplotlib.lines.Line2D at 0x7fde881eddd0>]"},"exec_count":3},"1":{"data":{"image/png":"381ca346c4fc711cc2230e842509f24dd2c03113"}}},"exec_count":3,"start":1495498753535,"input":"def get_err(N=128, L=24*u.micron):\n   \n    s = State2(Nxyz=(N,), Lxyz=(L,), N=1e5)\n    s.g11=s.g22=s.g12 = 0\n    a = np.sqrt(u.hbar/u.m/s.ws[0])\n    x = s.xyz[0]\n    psi_0 = np.exp(-(x/a)**2/2.0)\n    s[...] = psi_0\n    s.normalize()\n    dy = s.empty()\n    s.compute_dy_dt(dy=dy, subtract_mu=True)\n    return abs(dy[...]).max()\nNs = np.arange(2,128,2)\n#Ns = 2**np.arange(2,8)\nerrs = map(get_err, Ns)\nplt.semilogy(Ns, errs, '+-')","scrolled":true,"state":"done","pos":2,"cell_type":"code","type":"cell","end":1495498754638,"id":"0e5f39","kernel":"python2-ubuntu"}
{"output":{"0":{"data":{"image/png":"254b3cefd8b5a8484b5f17a9cb66e3c39661a1e3"}}},"exec_count":12,"start":1495498779359,"input":"e.y.cooling_phase = 1\ne.y.barrierFlag = True\ne.y.t = 0;\ne.y.g22 = 0.75 * e.y.g11\ne.y.g12 = 0\ne.y.barrierOffset = -3.5\ne.y.barrierIensity = 10.0\ne.y.barrierWidth = np.array([0.3,])\ne.y.barrierVelocity = np.array([.175,])\nwith NoInterrupt(ignore=True) as interrupted:\n    while e.y.t < 2*u.ms and not interrupted:\n        e.evolve(100)\n        plt.clf()\n        e.y.plot()\n        plt.plot(e.y.xyz[0],e.y.get_V()[0])\n        display(plt.gcf())\n        clear_output(wait=True)","state":"done","pos":11,"cell_type":"code","type":"cell","end":1495498822534,"id":"b889a9","kernel":"python2-ubuntu"}
{"output":{"0":{"data":{"text/plain":"[<matplotlib.lines.Line2D at 0x7fde879c6190>]"},"exec_count":11},"1":{"data":{"image/png":"c9e62312cd0127f8d94a9770e59b3a5fbb7bff42"}}},"exec_count":11,"start":1495498779046,"input":"b=s.get_Barrier(20)\ns.barrierFlag=False\nplt.plot(s.xyz[0],s.get_V()[0])","state":"done","pos":10,"cell_type":"code","type":"cell","end":1495498779349,"id":"043def","kernel":"python2-ubuntu"}
{"exec_count":1,"start":1495498752431,"input":"import math\nimport numpy as np\nfrom mmfutils.performance.fft import fftn, ifftn\nfrom pytimeode import interfaces, mixins, evolvers\nimport State2\nreload(State2)\nfrom State2 import State2, u","state":"done","pos":0,"cell_type":"code","type":"cell","end":1495498752836,"id":"2033ef","kernel":"python2-ubuntu"}
{"type":"file","last_load":1494352974775}